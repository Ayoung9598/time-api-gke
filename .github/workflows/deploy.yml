name: Deploy to GKE

on:
  push:
    branches: [main]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: time-api-cluster
  GKE_ZONE: us-central1-a
  IMAGE: time-api

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.6

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker
        run: |
          gcloud --quiet auth configure-docker

      - name: Build Docker image
        run: docker build -t gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA .

      - name: Push Docker image
        run: docker push gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA

      - name: Initialize Terraform
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -var="project_id=$PROJECT_ID"

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="project_id=$PROJECT_ID"

      - name: Get GKE Credentials
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $PROJECT_ID

      - name: Deploy to GKE
        run: |
          kubectl set image deployment/time-api time-api=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA -n time-api

      - name: Test API
        run: |
          export ENDPOINT=$(kubectl get service time-api -n time-api -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          curl -f http://$ENDPOINT/time || exit 1
